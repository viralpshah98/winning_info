name: winning_info
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.2.6 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.6

  # Defines the annotations used by json_serializable to create code for JSON serialization and deserialization.
  json_annotation: ^4.8.1

  # Small, easy to use and extensible logger which prints beautiful logs.
  logger: ^2.0.2+1

  # A Flutter plugin for launching a URL.
  url_launcher: ^6.2.4

  # Welcome to Freezed, yet another code generator for data-classes/unions/pattern-matching/cloning.
  freezed_annotation: ^2.4.1

  # A powerful Http client for Dart, which supports Interceptors, FormData, Request Cancellation, File Downloading, Timeout etc.
  dio: ^5.3.4

  # retrofit.dart is an dio client generator using source_gen and inspired by Chopper and Retrofit.
  retrofit: ^4.0.3

  # Open screens/snackbars/dialogs without context, manage states and inject dependencies easily with GetX.
  get: ^4.6.6


  # Custom event transformers inspired by ember concurrency. Built to be used with the bloc state management package.
  bloc_concurrency: ^0.2.2

  # Flutter Widgets that make it easy to implement the BLoC (Business Logic Component) design pattern.
  # Built to be used with the bloc state management package.
  flutter_bloc: ^8.1.3

  # A Dart package that helps to implement value based equality without needing to explicitly override == and hashCode.
  equatable: ^2.0.5

  # A fast, extra light and synchronous key-value in memory, which backs up data to disk at each operation. It is written entirely in Dart and easily integrates with Get framework of Flutter.
  get_storage: ^2.1.1
  flutter_screenutil: ^5.9.0
  # A unified form representation in Dart which aims to simplify form representation and validation in a generic way.
  formz: ^0.6.1
  flutter_slidable: ^3.0.1
  intl: ^0.19.0
  flutter_svg: ^2.0.9
  file_picker: ^8.1.7
  permission_handler: ^11.3.0
  device_info: ^2.0.3



dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0


  # A build system for Dart code generation and modular compilation.
  build_runner: ^2.4.13

  # Automatically generate code for converting to and from JSON by annotating Dart classes.
  json_serializable: ^6.7.1

  # retrofit generator is an dio client generator using source_gen and inspired by Chopper and Retrofit.
  retrofit_generator: ^8.0.4

  # Welcome to Freezed, yet another code generator for data-classes/unions/pattern-matching/cloning.
  freezed: ^2.4.5

  # A package which simplifies the task of updating your Flutter app's launcher icon.
  flutter_launcher_icons: ^0.13.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/png_images/
    - assets/images/svg_images/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: RedHatDisplay
      fonts:
        - asset: assets/fonts/redhat_display_black.ttf
        - weight: 800
        - asset: assets/fonts/redhat_display_bold.ttf
        - weight: 700
        - asset: assets/fonts/redhat_display_medium.ttf
        - weight: 500
        - asset: assets/fonts/redhat_display_regular.ttf
        - weight: 400
        - asset: assets/fonts/redhat_display_light.ttf
        - weight: 300
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
